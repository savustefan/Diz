@model LucrareDisertatie.Models.ViewModels.EditContentRequest

@{
}

<div class="container py-2">

    @if (Model != null)
    {
        <form method="post">

            <div class="mb-3">
                <label class="form-label">Id</label>
                <input type="text" class="form-control" id="id" asp-for="ID" readonly/>
            </div>

            <div class="mb-3">
                <label class="form-label">Header</label>
                <input type="text" class="form-control" id="header" asp-for="Header" />
            </div>

            <div class="mb-3">
                <label class="form-label">Title</label>
                <input type="text" class="form-control" id="title" asp-for="Title" />
            </div>

            <div class="mb-3">
                <label class="form-label">Content</label>
                <textarea class="form-control" id="content" asp-for="Content"></textarea>
            </div>

            <div class="mb-3">
                <label class="form-label">Summary</label>
                <input type="text" class="form-control" id="summary" asp-for="Summary" />
            </div>

            <div class="mb-3">
                <label class="form-label">Img Upload</label>
                <input type="file" id="imgUpload" class="form-control" />

                @if (Model.ImageUrl != null)
                {
                    <img src="@Model.ImageUrl" id="imgDisplay" style="display:block;width: 250px;" />
                }
                else
                {
                    <img src="" id="imgDisplay" style="display:none;width: 250px;" />
                }
                
            </div>

            <div class="mb-3">
                <label class="form-label">Image URL</label>
                <input type="text" class="form-control" id="imageUrl" asp-for="ImageUrl" />
            </div>

            <div class="mb-3">
                <label class="form-label">Handle URL</label>
                <input type="text" class="form-control" id="handleUrl" asp-for="HandleUrl" />
            </div>

            <div class="mb-3">
                <label class="form-label" asp-for="PostDate">Publish Date</label>
                <input type="date" class="form-control" id="publishDate" asp-for="PostDate" />
            </div>

            <div class="mb-3">
                <label class="form-label">Author</label>
                <input type="text" class="form-control" id="author" asp-for="Author" />
            </div>

            <div class="form-check mb-3">
                <input class="form-check-input" type="checkbox" id="hidden" asp-for="Hidden">
                <label class="form-check-label">
                    Is Hidden?
                </label>
            </div>

            <div class="mb-3">
                <label class="form-label">Tags</label>
                <select class="form-select" asp-items="@Model.Tags" asp-for="SelectedTags">
                </select>

            </div>

            <div class="mb-3 d-flex">
                <button type="submit" class="btn btn-dark">Save</button>

                <button type="submit" class="btn btn-danger ms-2" asp-area=""
                asp-controller="AdminContent"
                asp-action="Delete">Delete</button>
            </div>

        </form>
    }
    else
    {
        <p>No content!</p>
    }

</div>

                
@section Scripts {
    <script>
        tinymce.init({
            selector: '#content',
            plugins: [
                'advlist', 'autolink', 'link', 'image', 'lists', 'charmap', 'preview', 'anchor', 'pagebreak',
                'searchreplace', 'wordcount', 'visualblocks', 'visualchars', 'code', 'fullscreen', 'insertdatetime',
                'media', 'table', 'emoticons', 'help', 'imagetools'
            ],
            toolbar: 'undo redo | styles | bold italic | alignleft aligncenter alignright alignjustify | ' +
                'bullist numlist outdent indent | link image | print preview media fullscreen | ' +
                'forecolor backcolor emoticons | help',
           
        });

        const imgUploadElement = document.getElementById('imgUpload');
        const imgUrlElement = document.getElementById('imageUrl');
        const imgDisplayElement = document.getElementById('imgDisplay')

        async function imgUploadFunction(e) {
            let data = new FormData();
            data.append('file', e.target.files[0]);

            await fetch('/api/images', {
                method: 'POST',
                headers: {
                    'Aceept': '*/*',
                },
                body: data
            }).then(response => response.json())
                .then(result => {
                    imgUrlElement.value = result.link;
                    imgDisplayElement.src = result.link;
                    imgDisplayElement.style.display = 'block'
                });

        }

        imgUploadElement.addEventListener('change', imgUploadFunction);
    </script>
    }